[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

# ----- textobj -----
[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'kana/vim-textobj-line'

# [[plugins]]
# repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'kana/vim-textobj-underscore'

[[plugins]]
repo = 'thinca/vim-textobj-between'

[[plugins]]
repo = 'thinca/vim-textobj-comment'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'kana/vim-textobj-jabraces'

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'

[[plugins]]
repo = 'rhysd/vim-textobj-ruby'
on_ft = 'ruby'

# ----- operator -----
[[plugins]]
repo = 'kana/vim-operator-user'
[[plugins]]
repo = 'emonkak/vim-operator-sort'

[[plugins]]
repo = 'kana/vim-operator-replace'

[[plugins]]
repo = 'rhysd/vim-operator-surround'

[[plugins]]
repo = 'tyru/operator-camelize.vim'

# ----- unite -----
[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

# [[plugins]]
# repo = 'Shougo/vimfiler'

[[plugins]]
repo = 'Shougo/junkfile.vim'

[[plugins]]
repo = 'Shougo/unite-outline'

[[plugins]]
repo = 'thinca/vim-qfreplace'

[[plugins]]
repo = 'tsukkee/unite-tag'

[[plugins]]
repo = 'thinca/vim-unite-history'

[[plugins]]
repo = 'osyo-manga/unite-filetype'

[[plugins]]
repo = 'Shougo/unite-sudo'

[[plugins]]
repo = 'sorah/unite-ghq'

[[plugins]]
repo = 'Shougo/unite-build'

[[plugins]]
repo = 'Shougo/unite-help'

[[plugins]]
repo = 'Kocha/vim-unite-tig'

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'ujihisa/unite-rake'

[[plugins]]
repo = 'basyura/unite-rails'

[[plugins]]
repo = 'rhysd/unite-ruby-require.vim'

# ----- utility -----
[[plugins]]
repo = 'vim-scripts/renamer.vim'

[[plugins]]
repo = 'h1mesuke/vim-alignta'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'othree/eregex.vim'

[[plugins]]
repo = 'sjl/gundo.vim'

[[plugins]]
repo = 't9md/vim-textmanip'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
  autocmd! BufWritePost * Neomake
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'majutsushi/tagbar'

[[plugins]]
repo = 'szw/vim-tags'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'cocopon/vaffle.vim'

[[plugins]]
repo = 'justinmk/vim-dirvish'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'

[[plugins]]
repo = 'nixprime/cpsm'

[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'lambdalisue/vim-findent'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'cohama/vim-smartinput-endwise'
hook_add = 'call smartinput_endwise#define_default_rules()'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'taka84u9/vim-ref-ri'

[[plugins]]
repo = 'tpope/vim-fugitive'

# ----- lsp -----
[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  if executable('typescript-language-server')
    augroup LspTypeScript
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'typescript-language-server',
          \ 'cmd': {server_info->[&shell, &shellcmdflag, 'typescript-language-server --stdio']},
          \ 'root_uri':{server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'tsconfig.json'))},
          \ 'whitelist': ['typescript'],
          \ })
      autocmd FileType typescript setlocal omnifunc=lsp#complete
    augroup END
  endif
  if executable('pyls')
    " pip install python-language-server
    augroup LspPython
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'pyls',
          \ 'cmd': {server_info->['pyls']},
          \ 'whitelist': ['python'],
          \ })
      autocmd FileType python setlocal omnifunc=lsp#complete
    augroup END
  endif
  if executable('golsp')
    augroup LspGo
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'go-lang',
          \ 'cmd': {server_info->['golsp']},
          \ 'whitelist': ['go'],
          \ })
      autocmd FileType go setlocal omnifunc=lsp#complete
      autocmd FileType python,go nmap gd <plug>(lsp-definition)
    augroup END
  elseif executable('go-langserver')
    augroup LspGo
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'go-lang',
          \ 'cmd': {server_info->['go-langserver', '-mode', 'stdio', '-gocodecompletion']},
          \ 'whitelist': ['go'],
          \ })
      autocmd FileType go setlocal omnifunc=lsp#complete
    augroup END
  endif
  if executable('solargraph')
    augroup LspRuby
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'solargraph',
          \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
          \ 'whitelist': ['ruby'],
          \ })
      autocmd FileType ruby setlocal omnifunc=lsp#complete
    augroup END
  endif
  if executable('clangd')
    augroup LspCpp
      au!
      autocmd User lsp_setup call lsp#register_server({
          \ 'name': 'clangd',
          \ 'cmd': {server_info->['clangd']},
          \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
          \ })
      autocmd FileType c,cpp setlocal omnifunc=lsp#complete
    augroup END
  endif
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'

# ----- syntax -----
[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = 'cpp'

[[plugins]]
repo = 'vim-ruby/vim-ruby'

[[plugins]]
repo = 'chase/vim-ansible-yaml'

[[plugins]]
repo = 'cespare/vim-toml'

[[plugins]]
repo = 'ekalinin/Dockerfile.vim'

# ----- colorscheme -----
[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'aereal/vim-colors-japanesque'

[[plugins]]
repo = 'vim-scripts/jammy.vim'

[[plugins]]
repo = 'nanotech/jellybeans.vim'

[[plugins]]
repo = 'reedes/vim-colors-pencil'

[[plugins]]
repo = 'vim-scripts/twilight'

[[plugins]]
repo = 'jonathanfilip/vim-lucius'

[[plugins]]
repo = 'jpo/vim-railscasts-theme'

[[plugins]]
repo = 'altercation/vim-colors-solarized'

[[plugins]]
repo = 'vim-scripts/Wombat'

[[plugins]]
repo = 'tomasr/molokai'

[[plugins]]
repo = 'vim-scripts/rdark'

[[plugins]]
repo = 'mrkn/mrkn256.vim'

